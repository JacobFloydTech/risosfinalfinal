/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 ../public/testing.glb 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { MeshStandardMaterial } from 'three'

export function Model(props) {
  const group = useRef()
  const lightRef = useRef();
  const { nodes, materials, animations } = useGLTF('/public/testing.glb')
  const { actions } = useAnimations(animations, group)

  useEffect(() => { 
    
    actions['Armature.003Action.003'].loop = 0;
    actions['Armature.003Action.003'].repetitions = 0;
    actions['Armature.003Action.003'].clampWhenFinished = true;
    actions['Armature.003Action.003'].play();
  },[])
  return (
    <group ref={group} {...props} scale={80} position={[-4, -10, -18]} rotation={ [0, Math.PI/2,0.314 ]}  dispose={null}>
      <group name="Scene">
        <group name="Armature003" position={[-0.134, 0.105, 0.017]} scale={0.017}>
          <group name="Bone" rotation={[0, 1.571, 0]} />
          <group name="Bone001" position={[-1.24, -2.967, 0]} rotation={[-Math.PI, 1.571, 0]}>
            <group name="flap" position={[0, 1, 0]} rotation={[0.359, 0, Math.PI]}>
              <mesh name="Flap009" geometry={nodes.Flap009.geometry} material={new MeshStandardMaterial({color: "#242424", roughness:0.1, emissive: "#5A5A5A", emissiveIntensity: 0.45, metalness: 1})} position={[0, 3.766, 0.263]} rotation={[-0.883, -1.57, -1.213]} scale={58.807} />
              <group name="Screen012" position={[-0.057, 0.056, 0.969]} rotation={[1.339, -Math.PI / 2, 0]} scale={58.807}>
                <mesh name="Cube030" geometry={nodes.Cube030.geometry} material={materials['Glass.001']} />
                <mesh name="Cube030_1" geometry={nodes.Cube030_1.geometry} material={materials.Screen} />
              </group>
            </group>
            <group name="Bone003" position={[0, 1, 0]} rotation={[1.463, 0, 0]}>
              <group name="Bone004" position={[0, 0.316, 0]} rotation={[-2.727, 0, 0]}>
                <mesh name="Hinge009" geometry={nodes.Hinge009.geometry} material={new MeshStandardMaterial({color: "#242424", roughness:0.1, emissive: "#5A5A5A", emissiveIntensity: 0.45, metalness: 1})} position={[0.074, 0.314, -0.01]} rotation={[-1.877, Math.PI / 2, 0]} scale={58.807} />
              </group>
            </group>
            <group name="Base009" position={[0.074, -3.544, -0.615]} rotation={[-Math.PI, 1.571, 0]} scale={58.807}>
              <mesh name="Cube012" geometry={nodes.Cube012.geometry} material={new MeshStandardMaterial({color: "#242424", roughness:0.1, emissive: "#5A5A5A", emissiveIntensity: 0.45, metalness: 1})} />
              <mesh name="Cube012_1" geometry={nodes.Cube012_1.geometry}material={new MeshStandardMaterial({color: "green"})}  />
              <mesh name="Cube012_2" geometry={nodes.Cube012_2.geometry} material={new MeshStandardMaterial({color: "red"})} />
              <mesh name="Cube012_3" geometry={nodes.Cube012_3.geometry} material={new MeshStandardMaterial({color: "yellow"})} />
              <mesh name="Cube012_4" geometry={nodes.Cube012_4.geometry} material={new MeshStandardMaterial({color: "green"})} />
              <mesh name="Cuvette009" geometry={nodes.Cuvette009.geometry} material={materials['Glass.002']} rotation={[-2.225, 0.577, 2.087]} scale={0.992} />
              <mesh name="fake_water" geometry={nodes.fake_water.geometry} material={new MeshStandardMaterial({color: "blue"})} rotation={[-2.247, 0.907, 2.072]} scale={0.992} />
              <mesh name="Heatsink009" geometry={nodes.Heatsink009.geometry} material={materials.Heatsink} rotation={[-2.225, 0.577, 2.087]} />
              <mesh name="Rubber_Lid009" geometry={nodes.Rubber_Lid009.geometry} material={materials['rubber.002']} rotation={[-2.225, 0.577, 2.087]} />
              <group name="Screen011" position={[-0.007, -0.076, 0]} rotation={[0, 0, 1.573]}>
                <mesh name="Cube029" geometry={nodes.Cube029.geometry} material={materials['Glass.001']} />
                <mesh name="Cube029_1" geometry={nodes.Cube029_1.geometry} material={materials.Screen} />
              </group>
            </group>
          </group>
        </group>
      </group>
      <directionalLight ref={lightRef} position={[-4, 18, -18]} intensity={1.5} />
      <directionalLight ref={lightRef} position={[-4, -18, -18]} intensity={1.5} />
      
  
    </group>
  )
}

useGLTF.preload('/public/testing.glb')
