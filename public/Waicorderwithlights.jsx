/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 ../public/waicorderwithlights.glb 
*/

import React, { useRef, useState } from 'react'
import { useGLTF, useAnimations, MeshReflectorMaterial } from '@react-three/drei'
import { useEffect } from 'react'
import { useFrame, useThree } from '@react-three/fiber'
import gsap from 'gsap';
import { MeshStandardMaterial, DoubleSide, FrontSide, TextureLoader, AmbientLight } from 'three'



export function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/waicorderwithlights.glb')
  const { actions } = useAnimations(animations, group)
  const {scene} = useThree()


    useEffect(() => { 
      
        actions['Armature.003Action.003'].loop = 0;
        actions['Armature.003Action.003'].repetitions = 0;
        actions['Armature.003Action.003'].clampWhenFinished = true;
        animate();
    }, [])

  useFrame(() => { 

      const obj = scene.getObjectByName('Armature003')
      if (!obj) {  return}
      obj.rotation.y += 0.01;
    })

    function animate() { 
      actions['Armature.003Action.003'].play();
      actions['Armature.003Action.003'].paused = true;
      const obj = scene.getObjectByName('topBit');
      gsap.to(obj.position, { y: 0, duration: 3, ease:"power1.out", onComplete: () => {actions['Armature.003Action.003'].paused = false; }})

    }

  function getMaterial() {

    const texture = new TextureLoader().load('/water.jpeg');
    const material = new MeshStandardMaterial({map: texture, side: DoubleSide, transparent: true, opacity: 0.9})
 
    return material;
  }

  

  
  
  return (
    <group ref={group}  scale={80} rotation={[0, Math.PI/2, 0.35]} position={[0, -10,-20]} {...props} dispose={null}>
      <group name="Scene">
        <group name="Area" position={[0.192, 0.444, 0.09]} rotation={[-Math.PI / 2, 0, 0]} />
        <group name="Area001" position={[-0.026, 0.396, -0.318]} rotation={[-2.821, 0.368, -2.592]} />
        <group name="Area002" position={[-0.568, 0.525, 0.264]} rotation={[-Math.PI / 2, -0.656, 0]} />
        <group name="NurbsPath" position={[-0.678, -0.251, 0.017]} />
        <group name="Empty" position={[-0.511, 0.237, 0.026]} />
        <group name="Armature003" position={[-0.134, 0.105, 0.017]} scale={0.017}>
          <group name="Bone" rotation={[0, 1.571, 0]} />
          <group name="Bone001" position={[-1.24, -2.967, 0]} rotation={[-Math.PI, 1.571, 0]}>
            <group name="flap" position={[0, 1, 0]} rotation={[0.359, 0, Math.PI]}>
              <mesh name="Flap009" geometry={nodes.Flap009.geometry} position={[0, 3.766, 0.263]} rotation={[-0.883, -1.57, -1.213]} scale={58.807}>
                <MeshReflectorMaterial side={FrontSide} color={"#727272"} mixStrength={2} reflectorOffset={0}  mirror={0} metalness={1} roughness={0.3} resolution={400} />
              </mesh>
       
              <group name="Screen012" position={[-0.057, 0.056, 0.969]} rotation={[1.339, -Math.PI / 2, 0]} scale={58.807}>
                <mesh name="Cube030" geometry={nodes.Cube030.geometry} material={materials['Glass.001']} />
                <mesh name="Cube030_1" geometry={nodes.Cube030_1.geometry} material={materials.Screen} />
              </group>
            </group>
            <group name="Bone003" position={[0, 1, 0]} rotation={[1.463, 0, 0]}>
              <group name="Bone004" position={[0, 0.316, 0]} rotation={[-2.727, 0, 0]}>
                <mesh name="Hinge009" geometry={nodes.Hinge009.geometry}position={[0.074, 0.314, -0.01]} rotation={[-1.877, Math.PI / 2, 0]} scale={58.807}>
                  <MeshReflectorMaterial side={FrontSide} color={"#727272"} mixStrength={2} reflectorOffset={0}  mirror={0} metalness={1} roughness={0.3} resolution={400} />
                </mesh>
              </group>
            </group>
            <group name="Base009" position={[0.074, -3.544, -0.615]} rotation={[-Math.PI, 1.571, 0]} scale={58.807}>
              <mesh name="Cube012" geometry={nodes.Cube012.geometry} >
                           <MeshReflectorMaterial side={FrontSide} color={"#727272"} mixStrength={2} reflectorOffset={0}  mirror={0} metalness={1} roughness={0.3} resolution={400} />
              </mesh>
              <mesh name="Cube012_1" geometry={nodes.Cube012_1.geometry} material={new MeshStandardMaterial({metalness: 1, roughness: 0.5, color: "green"})} />
              <mesh name="Cube012_2" geometry={nodes.Cube012_2.geometry} material={new MeshStandardMaterial({metalness: 1, roughness: 0.5, color: "red"})} />
              <mesh name="Cube012_3" geometry={nodes.Cube012_3.geometry} material={new MeshStandardMaterial({metalness: 1, roughness: 0.5, color: "yellow"})} />
              <mesh name="Cube012_4" geometry={nodes.Cube012_4.geometry} material={new MeshStandardMaterial({metalness: 1, roughness: 0.5, color: "green"})} />
              <mesh name="Heatsink009" geometry={nodes.Heatsink009.geometry} material={materials.Heatsink} rotation={[-2.225, 0.577, 2.087]} />
              <group position={[0,10,0]} name='topBit'>
                <mesh name="Rubber_Lid009" geometry={nodes.Rubber_Lid009.geometry} material={materials['rubber.002']} rotation={[-2.225, 0.577, 2.087]} />
                <mesh name="Cuvette009" geometry={nodes.Cuvette009.geometry} material={materials['Glass.002']} rotation={[-2.225, 0.577, 2.087]} scale={0.992} />
                <mesh name="fake_water" geometry={nodes.fake_water.geometry} material={getMaterial()} rotation={[-2.247, 0.907, 2.072]} scale={0.992} />
              </group>
              <group name="Screen011" position={[-0.007, -0.076, 0]} rotation={[0, 0, 1.573]}>
                <mesh name="Cube029" geometry={nodes.Cube029.geometry} material={materials['Glass.001']} />
                <mesh name="Cube029_1" geometry={nodes.Cube029_1.geometry} material={materials.Screen} />
              </group>
            </group>
          </group>
        </group>
        <pointLight name="Light" intensity={4} decay={2} position={[0, 1.26, 0.636]} rotation={[-1.839, 0.602, 1.932]} scale={[1.002, 1.186, 1.305]} />
        <ambientLight/>
   

      </group>
      <directionalLight name='directional' position={[0, 20, 4]} intensity={4} />
      <directionalLight name='directional1' position={[-10, 0, 10]} intensity={4} />
    </group>
  )
}

useGLTF.preload('/waicorderwithlights.glb')


